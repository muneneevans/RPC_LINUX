/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ARM_H_RPCGEN
#define _ARM_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct pair {
	float a;
	float b;
};
typedef struct pair pair;

#define ADD_PROG 0x23441111
#define ADD_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define ADD 1
extern  float * add_1(pair *, CLIENT *);
extern  float * add_1_svc(pair *, struct svc_req *);
extern int add_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define ADD 1
extern  float * add_1();
extern  float * add_1_svc();
extern int add_prog_1_freeresult ();
#endif /* K&R C */

#define SUB_PROG 0x23451111
#define SUB_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define SUB 1
extern  float * sub_1(pair *, CLIENT *);
extern  float * sub_1_svc(pair *, struct svc_req *);
extern int sub_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SUB 1
extern  float * sub_1();
extern  float * sub_1_svc();
extern int sub_prog_1_freeresult ();
#endif /* K&R C */

#define MULTIPLY_PROG 0x23461111
#define MULTIPLY_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define MULTIPLY 1
extern  float * multiply_1(pair *, CLIENT *);
extern  float * multiply_1_svc(pair *, struct svc_req *);
extern int multiply_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define MULTIPLY 1
extern  float * multiply_1();
extern  float * multiply_1_svc();
extern int multiply_prog_1_freeresult ();
#endif /* K&R C */

#define DIVIDE_PROG 0x23471111
#define DIVIDE_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DIVIDE 1
extern  float * divide_1(pair *, CLIENT *);
extern  float * divide_1_svc(pair *, struct svc_req *);
extern int divide_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DIVIDE 1
extern  float * divide_1();
extern  float * divide_1_svc();
extern int divide_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_pair (XDR *, pair*);

#else /* K&R C */
extern bool_t xdr_pair ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ARM_H_RPCGEN */
